<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        57.1、spring 依赖注入
        依赖注入，就是依赖关系的维护，
        当前类A，要用到其他类B，
            原本：自己创建这个类，但是这样就导致了A和B的耦合
            现在：由spring提供这个类B对象，
                但是，为什么spring里面会有类B，这就要做配置

        能注入的数据有三类：基本类型、string、bean类型、复杂类型/集合类型
        注入的方式有三种：
            一、构造函数
            二、set方法
            三、注解提供注入 -> 这里暂时不写
    -->

    <!--57.1.1、构造函数注入
        constructor-arg
            type    要注入数据的数据类型
            index   要注入数据给构造函数中指定索引位置的参数，从0开始。
            name    指定构造函数中的指定参数名

            value   提供基本类型、string类型的参数值
            ref     引用其他bean类型的数据作为当前的参数。
                这个bean类型，只要是在spring的ioc核心容器中出现过即可，用id定位。

        下面这个定义之后，会直接去找到AccountServiceImpl类中找构造函数，去创建对象。-->
    <bean id="accountService"
          class="com.linear.D01_Injection.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="AAABBCC"></constructor-arg>
        <constructor-arg name="age" value="19"></constructor-arg>

        <!--Tips: birthday是一个Date类型，不能直接用value赋值，
            此时需要用ref，去引用一个bean对象赋值-->
        <constructor-arg name="birthday" ref="nowTime"></constructor-arg>
    </bean>

    <!-- 创建一个nowTime的bean对象，注入一个Date对象
        -> 约等于 nowTime = new Date() -->
    <bean id="nowTime" class="java.util.Date"></bean>



    <!-- 57.1.2、set注入
        使用默认构造函数去构造，
        然后调用其set方法，去对成员变量赋值。
        property : name  value  ref
    -->
    <bean id="accountServiceSet"
          class="com.linear.D01_Injection.service.impl.AccountServiceImpl2">
        <property name="age" value="123"></property>
        <property name="name" value="ddd"></property>
        <property name="birthday" ref="nowTime"></property>
    </bean>


    <!--57.1.3、使用set，对集合进行注入
        如果成员变量是一个集合，此时怎么注入
        <set>   里面是单个的value
        <array> 里面也是单个的value
        <list>  里面也是单个的value

        <props> 里面是<prop key="xxx">value</prop>
        <map>   里面是<entry key="xxx" value="xxx"></entry>
                也可以<entry key="xxx">value</entry>
    -->
    <bean id="accountServiceSetCollection"
        class="com.linear.D01_Injection.service.impl.AccountServiceImpl3">
        <!-- (1) 数组格式的，用set、list、array都行 -->
        <property name="strArr">
            <set>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </set>
        </property>

        <property name="strList">
            <array>
                <value>DDD</value>
                <value>EEE</value>
                <value>FFF</value>
            </array>
        </property>

        <property name="strSet">
            <list>
                <value>111</value>
                <value>222</value>
                <value>333</value>
            </list>
        </property>

        <!-- (2) key-value格式的,可以用props和map -->
        <property name="strMap">
            <map>
                <entry key="abc">
                    <value>def</value>
                </entry>
                <entry key="jkl" value="mno"></entry>
            </map>
        </property>
        <property name="props">
            <props>
                <prop key="sss">ddd</prop>
                <prop key="ggg">hhh</prop>
            </props>
        </property>

    </bean>

</beans>