<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.com.linear.dao.IUserDao">

    <!--我们发现，User类和数据库的user表的字段，并不是一一对应的，
        因此需要给他们做映射，使用resultMap标签，

        resultMap的id随便定，比如叫做userMap
            在select、update等标签上，加上一个resultMap="userMap"，
            此时本条查询语句就会自动进行字段的映射
    -->
    <resultMap id="userMap" type="com.com.linear.domain.User">
        <id property="userId" column="id" />
        <result property="userName" column="username" />
        <result property="userAddress" column="address"/>
        <result property="userSex" column="sex" />
        <result property="userBirthday" column="birthday" />
    </resultMap>

    <!--1、查找所有-->
    <select id="findAll" resultType="com.com.linear.domain.User">
        select * from user;
    </select>

    <!--2、插入一条-->
    <insert id="saveUser" parameterType="com.com.linear.domain.User">
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)
          values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>

    <!--3、修改一条-->
    <update id="updateUser" parameterType="com.com.linear.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId};
    </update>

    <!--4、根据id删除一条记录-->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from user where id = #{id};
    </delete>

    <!--5、根据id查找一条记录-->
    <select id="findById" parameterType="java.lang.Integer" resultType="com.com.linear.domain.User" resultMap="userMap">
        select * from user where id=#{userId};
    </select>

    <!--6、根据username模糊查询-->
    <select id="findByName" parameterType="java.lang.String" resultType="java.util.List" resultMap="userMap">
        select * from user where username like #{username};
    </select>

    <!--7、获取用户数-->
    <select id="findTotal" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(id) from user;
    </select>

    <!--8、借助封装类进行查询-->
    <select id="findUserByVo" parameterType="com.com.linear.domain.QueryVo"
        resultType="java.util.List"
        resultMap="userMap"
    >
        select * from user where username like #{user.userName}
    </select>

</mapper>